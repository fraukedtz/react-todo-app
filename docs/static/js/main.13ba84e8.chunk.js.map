{"version":3,"sources":["Heading.js","Counter.js","Welcome.js","Input.js","Todo.js","App.js","serviceWorker.js","index.js"],"names":["Heading","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Component","Counter","props","number","concat","Welcome","Input","onEnter","type","placeholder","onKeyPress","Todo","_this$props","text","isDone","onClick","onDelete","App","state","todos","_this","load","deleteTodo","index","updatedTodos","toConsumableArray","slice","setState","toggleDone","todo","objectSpread","handleKeyPress","event","input","target","save","Fragment","src_Heading_0","length","src_Counter_0","getDoneNumber","renderTodos","src_Welcome_0","src_Input_0","_this2","map","item","src_Todo_0","Math","random","filter","t","localStorage","setItem","JSON","stringify","parse","getItem","err","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.13ba84e8.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Heading.css'\n\nexport class Heading extends Component {\n  render() {\n    return (\n      <div className=\"Heading\">\n        <h1>To-Do</h1>\n      </div>\n    )\n  }\n}\n\nexport default Heading\n","import React, { Component } from 'react'\nimport './Counter.css'\n\nexport class Counter extends Component {\n  render() {\n    return (\n      <div className=\"Counter\">\n        {this.props.number > 0\n          ? `Well done - you have completed ${this.props.number} ${\n              this.props.number > 1 ? 'tasks' : 'task'\n            }! ðŸ˜Ž`\n          : `Let's go - start completing your tasks! ðŸ¤“`}\n      </div>\n    )\n  }\n}\n\nexport default Counter\n","import React, { Component } from 'react'\nimport './Welcome.css'\n\nexport class Welcome extends Component {\n  render() {\n    return (\n      <div className=\"Welcome\">\n        <h3>Welcome!</h3>\n        <p>Start adding tasks now...</p>\n      </div>\n    )\n  }\n}\n\nexport default Welcome\n","import React, { Component } from 'react'\nimport './Input.css'\n\nexport class Input extends Component {\n  render() {\n    const { onEnter } = this.props\n    return (\n      <input type=\"text\" placeholder=\"+ Add a to-do\" onKeyPress={onEnter} />\n    )\n  }\n}\n\nexport default Input\n","import React, { Component } from 'react'\nimport './Todo.css'\n\nexport class Todo extends Component {\n  render() {\n    const { text, isDone, onClick, onDelete } = this.props\n    return (\n      <div className=\"listItem\">\n        <li onClick={onClick} className={isDone ? 'done' : ''}>\n          {text}\n        </li>\n        <button onClick={onDelete}>&times;</button>\n      </div>\n    )\n  }\n}\n\nexport default Todo\n","import React, { Component } from 'react'\nimport './App.css'\nimport Heading from './Heading.js'\nimport Counter from './Counter.js'\nimport Welcome from './Welcome.js'\nimport Input from './Input.js'\nimport Todo from './Todo.js'\n\nclass App extends Component {\n  state = {\n    todos: this.load()\n  }\n\n  render() {\n    this.save()\n    return (\n      <React.Fragment>\n        <section className=\"App\">\n          <Heading />\n          {this.state.todos.length > 0 ? (\n            <Counter number={this.getDoneNumber()} />\n          ) : null}\n          {this.state.todos.length > 0 ? (\n            <ul>{this.renderTodos()}</ul>\n          ) : (\n            <Welcome />\n          )}\n        </section>\n        <footer>\n          <Input onEnter={this.handleKeyPress} />\n        </footer>\n      </React.Fragment>\n    )\n  }\n\n  renderTodos() {\n    return this.state.todos.map((item, index) => (\n      <Todo\n        key={Math.random()}\n        text={item.text}\n        isDone={item.isDone}\n        onClick={() => this.toggleDone(index)}\n        onDelete={() => this.deleteTodo(index)}\n      />\n    ))\n  }\n\n  deleteTodo = index => {\n    const { todos } = this.state\n\n    const updatedTodos = [...todos.slice(0, index), ...todos.slice(index + 1)]\n\n    this.setState({\n      todos: updatedTodos\n    })\n  }\n\n  toggleDone = index => {\n    const { todos } = this.state\n    const todo = todos[index]\n    const updatedTodos = [\n      ...todos.slice(0, index),\n      { ...todo, isDone: !todo.isDone },\n      ...todos.slice(index + 1)\n    ]\n\n    this.setState({\n      todos: updatedTodos\n    })\n  }\n\n  handleKeyPress = event => {\n    const { todos } = this.state\n    const input = event.target\n    if (event.key === 'Enter') {\n      const updatedTodos = [{ text: input.value, isDone: false }, ...todos]\n\n      this.setState({\n        todos: updatedTodos\n      })\n\n      input.value = ''\n    }\n  }\n\n  getDoneNumber() {\n    return this.state.todos.filter(t => t.isDone).length\n  }\n\n  save() {\n    localStorage.setItem('todo-app--todos', JSON.stringify(this.state.todos))\n  }\n\n  load() {\n    try {\n      return JSON.parse(localStorage.getItem('todo-app--todos')) || []\n    } catch (err) {\n      return []\n    }\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}